package lessons;

import java.util.Scanner;

public class FirstLesson {
    // psvm
//    ctrl+/ comment
    // TODO: 02.03.20 test
    /*многострочный
    комментарий ctrl+shift+/
     */
//    psvm точка входа в приложение
    /*2 типа данных:
    * 1. примитивные типы
    * byte - размер 1 байт целые числа -128 до 127 в основном для потоков данных или в массивах для экономии памяти
    * 2 ссылочные типы данных
    * для сохранения данных необходимо дать имя и определить тип данных
    * */

    public static void main(String[] args) {
        byte byteVar; //объявление переменной
        byte byteVar3 = 35; //объявление и присвоивание значения
        byte byteVar4 = 35, byteVar5 = 20, byteVar6 = 17;
        /*имена переменных с маленьких букв и должно отражать что хотим сохранить
        * имена переменных можно записывать через запятую*/
        byte byteVar1, byteVar2;
        byteVar = 10;
        byteVar = 12;

        /* short - 2 байта от целые числа -32768 до +32767*/
        short shortVar1 = 300;
        /* int - 4 байта */
        int intVar1 = 1000;
        int intVar2 = 2_000_000; //нижние подчеркивания машина игнорирует
        int zeroDivision = intVar1;
        short shortVar2 = 200;
        int shortVar3 = shortVar1 + shortVar2; //short (byte)+short тип данных int из-за преобразования
        /*long - 8 байнт */
        long longVar1 = 30000_000_000L; //закрыть число "L" иначе данные будут восприниматься как int
        //float - 4 байта для дробных типов данных
        float floatVar1 = 5.7f; //закрыть число буквой f
        float floatVar2 = floatVar1/0;
        //sout вывод значения на экран
        System.out.println(floatVar2);
        double doubleVar = -3.12; // 8 байт (числа с плавающей точкой)
        double doubleVar1 = doubleVar / 0;
        System.out.println(doubleVar1);
        //todo выделяет запись другим цветом;
        //Fixme тоже самое
        //char 2 байта хранит номер символа в таблице юникод, кодировка UTF-16 от 0 до 65356
        boolean isActive = true;// логический тип данных либо правда либо лож
        boolean isClosed = false;
        // приведение типов:
        // 1.автоматическое приведение типов
        byte someByte = 10;
        int someInt = someByte; // переход из байта в инт
        // 2. явное приведение
        someInt = 100;
        someByte = (byte) someInt; // в скобках переход в необходимый тип


        // TODO: 02.03.20 операторы
        //оператор присваивания:
        // 1. "=" присвоить
        // 2. "+=" прибавить и присвоить и тд с * / -
        // 3. %= взять остаток от деления и присвоить
        int a = 10;
        a += 7; // или а=а+7
        //арифметические операторы
        // + - / * % сложение вычитаение деление умножение взятие остатка от деления
        // 7/2 = 3
        // 7%2 = 1
        a = 12;
        int b = 7;
        int c = a/b;
        double c1 = (double)a/b;
        System.out.println(c);
        System.out.println(c1);


        // TODO: 02.03.20 операторы
        // Операторы сравнения > < <= >= /!= (неравно), ==(равенство);
        //результат операторов сравнения либо екгу либо false;
        //8 > 10 false
        // 8 >= 8 true
        //6 != 0 true


        // TODO: 02.03.20  инкремент и дикремент
        //инкремент увеличивает на 1 (постфиксная i++ или ++i префиксная)
        //дикремент уменьшает на 1  (i-- или --i)


        // TODO: 02.03.20 консольный вывод
        //System.out.println("выводимая информация") всегда двойные ковычки в скобках
        //System.out.printf("Форматированный вывод %s \n (номер строки)", "данные");
        // %f для вывода чисел с плавающей точкой
        // %d  для вывода целых чисел
        // %s для вывода строк
        // форматированный вывол это высоконрагруженные, дорогостоющие операции


        // TODO: 02.03.20 консольный ввод
        Scanner in = new Scanner (System.in);
        System.out.println("Введите число");
        int num = in.nextInt();
        System.out.printf("Вы ввели %d\n" , num);

        // TODO: 02.03.20 логические операторы ВАЖНО ПИЗДЕЦ
        // применяются к переменным boolean  или к выражениям
        // && оператор и
        // || или
        // ! не
        // ^исключащиющее или

        //тернарный оператор (if then else в паскале)
        //переменная = (условие) ? выражение 1 : выражение 2;
        a = 4;
        b = 10;
        int p;
        p = a < b ? a + b : a - b;
        System.out.printf("p=", p);

        // TODO: 02.03.20 задача
        int result=15;
        int abs;
        abs =result%=2==0 ? result*2 : result/2;
        System.out.println(abs);
        // TODO: 04.03.20 LESSON 2 начали с инкремента
        a = 2;
        int aRes = a++ - ++a + a++ + a++ + a;
        // 2-4+4+5+6
        System.out.println(aRes);
    }
}
